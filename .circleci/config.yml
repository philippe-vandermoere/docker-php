version: 2.1
commands:
    docker_login:
        description: "Authenticate to docker registry"
        parameters:
            docker_registry:
                type: string
                default: docker.io
            docker_login:
                type: string
            docker_password:
                type: string
        steps:
            - run:
                name: "Authenticate to registry << parameters.docker_registry >>"
                command: echo << parameters.docker_password >> | docker login -u << parameters.docker_login >> --password-stdin << parameters.docker_registry >>

    docker_load_cache:
        description: "Load docker layers"
        parameters:
            cache_key:
                type: string
                default: docker
            cache_folder:
                type: string
                default: /docker/caches
        steps:
            - restore_cache:
                keys:
                    - << parameters.cache_key >>
                paths:
                    - << parameters.cache_folder >>
            - run:
                name: "Load docker cache"
                command: |
                    if [[ -d << parameters.cache_folder >> ]]; then \
                        for file in $(find << parameters.cache_folder >> -type f -name "*.tar.gz");do \
                            zcat ${file} | docker load; \
                        done; \
                        for file in $(find << parameters.cache_folder >> -type f -name "*.tar");do \
                            docker load -i ${file}; \
                        done; \
                    fi

    docker_save_cache:
        description: "Save docker layers"
        parameters:
            cache_key:
                type: string
                default: docker
            cache_folder:
                type: string
                default: /docker/caches
            compress:
                type: boolean
                default: true
        steps:
            - run: mkdir -p << parameters.cache_folder >>
            - when:
                condition: << parameters.compress >>
                steps:
                    - run: docker save $(docker images -a -q | tr '\n' ' ') | gzip > << parameters.cache_folder >>/docker.tar.gz
            - unless:
                condition: << parameters.cache_folder >>
                steps:
                    - run: docker save $(docker images -a -q | tr '\n' ' ') -o << parameters.cache_folder >>/docker.tar.gz
            - save_cache:
                key: << parameters.cache_key >>-{{ epoch }}
                paths:
                    - << parameters.cache_folder >>

    docker_push:
        description: "Push docker image"
        parameters:
            local_docker_tag:
                type: string
            docker_repository_tag:
                type: string
        steps:
            - run:
                name: "Docker push << parameters.docker_repository_tag >>"
                command: |
                    docker tag << parameters.local_docker_tag >> << parameters.docker_repository_tag >>
                    docker push << parameters.docker_repository_tag >>

    docker_build:
        description: "Build docker image"
        parameters:
            php_version:
                type: string
            php_extensions:
                type: string
            local_docker_tag:
                type: string
        steps:
            - run:
                name: "Docker build << parameters.local_docker_tag >>"
                command: |
                    bin/docker-php \
                        --version '<< parameters.php_version >>' \
                        --extensions '<< parameters.php_extensions >>' \
                        --docker-tag '<< parameters.local_docker_tag >>' \
                        --verbose

executors:
    docker:
        docker:
            - image: docker:18.09.5-git
        working_directory: ~/repo

jobs:
    dockerhub:
        executor: docker
        parameters:
            php_version:
                type: string
        steps:
            - checkout
            - setup_remote_docker
            - docker_login:
                docker_login: ${DOCKERHUB_LOGIN}
                docker_password: ${DOCKERHUB_PASSWORD}
            - docker_load_cache:
                cache_key: docker-<< parameters.php_version >>
            - docker_build:
                php_version: << parameters.php_version >>
                php_extensions: ''
                local_docker_tag: php:<< parameters.php_version >>
            - docker_build:
                php_version: << parameters.php_version >>
                php_extensions: 'xdebug'
                local_docker_tag: php:<< parameters.php_version >>-dev
            - docker_push:
                local_docker_tag: php:<< parameters.php_version >>
                docker_repository_tag: wizphilippe/php:<< parameters.php_version >>
            - docker_push:
                local_docker_tag: php:<< parameters.php_version >>-dev
                docker_repository_tag: wizphilippe/php:<< parameters.php_version >>-dev
            - docker_save_cache:
                cache_key: docker-<< parameters.php_version >>

workflows:
    version: 2.1
    docker:
        jobs:
            - dockerhub:
                php_version: 5.6.39
                filters:
                    branches:
                        only: master
            - dockerhub:
                php_version: 7.0.33
                filters:
                    branches:
                        only: master
            - dockerhub:
                php_version: 7.1.29
                filters:
                    branches:
                        only: master
            - dockerhub:
                php_version: 7.2.18
                filters:
                    branches:
                        only: master
            - dockerhub:
                php_version: 7.3.5
                filters:
                    branches:
                        only: master
